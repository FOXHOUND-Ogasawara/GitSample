import java.util.HashSet;
import java.util.LinkedHashSet;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;

class ATM{
	private Map<Integer,String> menu = new HashMap<Integer, String>(); //menu
	private int balance;
	private int maxDepositValue = 2000000;
	private int maxWithdrawalValue = 50000;
	
	public ATM(){
		//フィールドに初期値を設定する
		this.menu.put(1,"預け入れ");
		this.menu.put(2,"引き出し");
		this.menu.put(3,"残高照会");
		this.menu.put(4,"終了");
		
		this.balance = 0;

	}
	
	public void setBalance(int amount){
		this.balance = amount;
	}
	//以降の課題で実装する各機能を実行する
	public void execution(){
		showMenu();
		int userInput = getUserInput(4);

		switch(userInput){
			case 1:
				this.deposit();			
				break;
			case 2:
				this.withdrawal();
				break;
			case 3:
				this.showBalance();
				break;
			case 4:
				System.out.println("ATM のご利用ありがとうございました");
				return;
		}
		this.execution();
	}
	
    private void showMenu(Map<Integer, String> menu) {
       menu.forEach((key, value) -> System.out.print(key + ":" + value + " "));
       System.out.println();
    }
	
	public int getUserInput(int max){
		int num = 0;
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        try {
			showMenu(hands);
            num = Integer.parseInt(br.readLine());
			if(num > max && num < 1){
				System.out.println("1-" + max + "!");
				return getInputInt(max);
			}
        }catch (NumberFormatException e){
            System.out.println("Please enter an integer! either of 1,2,3");
            return getInputInt();
        }
		return num;
	}
	
	public void showBalance(){
		System.out.println("残高は" + this.balance + "円です");
	}
	
	public void deposit(){
		System.out.println("ご入金額を入力してください:");
		int input = this.getUserInput(maxDepositValue)
		this.balance = input;
		System.out.println(this.balance + "円お預かりしました");
	}
	
	public void withdrawal(){
		System.out.println("ご出金額を入力してください");
		if(this.balance == 0){
			System.out.println("残高がありません");
			return;
		}
		
		int userInput = getUserInput(maxWithdrawalValue);
		
		if(this.balance < userInput){
			System.out.println("残高が不足しています、残高は {"+ this.balance + "} 円です");
			return;
		}
		
		System.out.println(userInput + " 円お返ししました");
		this.balance -= userInput;
	}
}

public class Bank{
	
	private String name;
	private Map<String,String> client = new HashMap<String, String>(); //client
	private Map<Integer,String> menu = new HashMap<Integer, String>(); //menu
	private ATM myAtm = new ATM();
	private boolean inUse;
	
	public bank(){
		this.name = "UJF";
		
		this.client.put("name", "Taro");
		this.client.put("balance","10000");
	
		this.menu.put(1,"ATM 利用");
		this.menu.put(2,"終了");
		
		this.inUse = false;
	}
	
	public void atmServiceStart(){
			if(!this.inUse){
				System.out.println("いらっしゃいませ、ようこそ SLS銀行へ");
				int clientBalance = (Integer.parseInt(this.client.get("balance"));
				this.inUse = true;
			}
			System.out.println(this.client.get("name") + "san様ようこそ");
			
			
			myAtm.setBalance(clientBalance);
		
			myAtm.execution();
	}
	
	private void showMenu(Map<Integer, String> menu) {
	       menu.forEach((key, value) -> System.out.print(key + ":" + value + " "));
	       System.out.println();
    }
}

public class Kadai {
		public static void main(String[] args) {
			ATM atm = new ATM();
			atm.execution();
	}
}